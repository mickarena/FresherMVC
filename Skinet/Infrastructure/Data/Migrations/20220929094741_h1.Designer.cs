// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220929094741_h1")]
    partial class h1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entity.MedicineBill", b =>
                {
                    b.Property<Guid>("IDBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DoctorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.HasKey("IDBill");

                    b.ToTable("MedicineBill");
                });

            modelBuilder.Entity("Core.Entity.MedicineBillInfo", b =>
                {
                    b.Property<Guid>("BillInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMedicineInfo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicineInfomationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("BillInfoID");

                    b.HasIndex("BillId");

                    b.HasIndex("MedicineInfomationId");

                    b.ToTable("MedicineBillInfo");
                });

            modelBuilder.Entity("Core.Entity.MedicineInfomation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEmpty")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdType");

                    b.ToTable("MedicineInfomation");
                });

            modelBuilder.Entity("Core.Entity.MedicineType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MedicineType");
                });

            modelBuilder.Entity("Core.Entity.MedicineBillInfo", b =>
                {
                    b.HasOne("Core.Entity.MedicineBill", "MedicineBills")
                        .WithMany("MedicineBillInfo")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entity.MedicineInfomation", "MedicineInfomation")
                        .WithMany("MedicineBillInfos")
                        .HasForeignKey("MedicineInfomationId");

                    b.Navigation("MedicineBills");

                    b.Navigation("MedicineInfomation");
                });

            modelBuilder.Entity("Core.Entity.MedicineInfomation", b =>
                {
                    b.HasOne("Core.Entity.MedicineType", "MedicineType")
                        .WithMany("MedicineInfomations")
                        .HasForeignKey("IdType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicineType");
                });

            modelBuilder.Entity("Core.Entity.MedicineBill", b =>
                {
                    b.Navigation("MedicineBillInfo");
                });

            modelBuilder.Entity("Core.Entity.MedicineInfomation", b =>
                {
                    b.Navigation("MedicineBillInfos");
                });

            modelBuilder.Entity("Core.Entity.MedicineType", b =>
                {
                    b.Navigation("MedicineInfomations");
                });
#pragma warning restore 612, 618
        }
    }
}
